name: Jekyll CI/CD

on:
  push:
    branches:    
      - main   

jobs:
  build_job:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build site
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll \
        -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod +x ci-build.sh && ./ci-build.sh"
    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: build
        path: build
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_job
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: build
    - name: "Prepare SSH key and known hosts"
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.DEPLOY_KEY }}"
        echo "Host ${{ secrets.DEPLOY_HOST }}" > ~/.ssh/config
        echo "    Port ${{ secrets.DEPLOY_PORT }}" >> ~/.ssh/config
        ssh-keyscan -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
    - name: Run deploy script
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        rsync -avz -e "ssh -o StrictHostKeyChecking=yes" --progress build/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}/tar
        ssh -o StrictHostKeyChecking=yes ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} 'bash -s' -- < build/ci-deploy.sh ${{ secrets.DEPLOY_PATH }}
